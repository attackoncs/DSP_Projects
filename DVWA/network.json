{"networkList":[],"canvasJSON":"<mxGraphModel>\n  <root>\n    <mxCell id=\"0\"/>\n    <mxCell id=\"1\" parent=\"0\"/>\n    <mxCell id=\"WebServer\" value=\"&lt;h5 id=&quot;toptitle&quot; class=&quot;no-selection&quot; style=&quot;margin:0px;&quot;&gt;WebServer&lt;/h5&gt;&lt;br&gt;&lt;img src=&quot;assets/docker_image_icons/host.png&quot; width=&quot;48&quot; height=&quot;48&quot;&gt;\" parent=\"1\" vertex=\"1\" connectable=\"0\" type=\"NetworkElement\" name=\"WebServer\">\n      <mxGeometry x=\"1\" width=\"120\" height=\"120\" as=\"geometry\">\n        <mxRectangle width=\"120\" height=\"40\" as=\"alternateBounds\"/>\n      </mxGeometry>\n    </mxCell>\n    <mxCell id=\"2\" style=\"port;image=/editors/images/ethernet.png;align=right;imageAlign=right;spacingRight=18\" parent=\"WebServer\" vertex=\"1\" type=\"Interface\" name=\"WebServer\">\n      <mxGeometry y=\"0.25\" width=\"16\" height=\"16\" relative=\"1\" as=\"geometry\">\n        <mxPoint x=\"-6\" y=\"-8\" as=\"offset\"/>\n      </mxGeometry>\n    </mxCell>\n    <mxCell id=\"3\" style=\"port;image=/editors/images/ethernet.png;align=right;imageAlign=right;spacingRight=18\" parent=\"WebServer\" vertex=\"1\" type=\"Interface\" name=\"WebServer\">\n      <mxGeometry y=\"0.75\" width=\"16\" height=\"16\" relative=\"1\" as=\"geometry\">\n        <mxPoint x=\"-6\" y=\"-4\" as=\"offset\"/>\n      </mxGeometry>\n    </mxCell>\n    <mxCell id=\"4\" style=\"port;image=/editors/images/ethernet.png;spacingLeft=18\" parent=\"WebServer\" vertex=\"1\" type=\"Interface\" name=\"WebServer\">\n      <mxGeometry x=\"1\" y=\"0.25\" width=\"16\" height=\"16\" relative=\"1\" as=\"geometry\">\n        <mxPoint x=\"-8\" y=\"-8\" as=\"offset\"/>\n      </mxGeometry>\n    </mxCell>\n    <mxCell id=\"5\" style=\"port;image=/editors/images/ethernet.png;spacingLeft=18\" parent=\"WebServer\" vertex=\"1\" type=\"Interface\" name=\"WebServer\">\n      <mxGeometry x=\"1\" y=\"0.75\" width=\"16\" height=\"16\" relative=\"1\" as=\"geometry\">\n        <mxPoint x=\"-8\" y=\"-4\" as=\"offset\"/>\n      </mxGeometry>\n    </mxCell>\n  </root>\n</mxGraphModel>\n","clistToDraw":[{"name":"WebServer","selectedImage":{"name":"dockersecplayground/linode_lamp:v1.0","labels":{"caps_add":"NET_ADMIN","type":"server","actions":{"create_db":{"args":{"db_name":{"rule":{"pattern":"^[a-zA-Z0-9_-]+$"},"type":"text","val":""}},"command":"/create_db.sh","description":"Create a new db, insert a name for new db","name":"create_db"},"exec":{"command":"exec","description":"Execute a generic command","name":"exec","args":{"command":{"type":"text","val":"echo \"h3llO\""}}},"sed":{"args":{"filename":{"type":"text","val":""},"string_one":{"type":"text","val":""},"string_two":{"type":"text","val":""}},"command":"/sed.sh ","description":"Replace a string with another inside a file","name":"sed"},"setgw":{"args":{"gateway":{"rule":{"pattern":"^[a-zA-Z0-9_-]+$"},"type":"text","val":""}},"command":"/setgw.sh","description":"Set default gateway  <name container gateway> ","name":"setgw"},"sql_to_db":{"args":{"db_name":{"type":"text","val":""},"sql_file":{"type":"text","val":""}},"command":"/sql_to_db.sh","description":"Execute a sql file into a db (you must load a sql file in container first! ) ","name":"sql_to_db"},"start_apache":{"command":"/apache_start.sh","description":"Start web server","name":"start_apache"},"start_apache_debug":{"command":"/apache_start_debug.sh","description":"Start web server in debug mode (all errors reported)","name":"start_apache_debug"},"start_mysql":{"command":"/mysql_start.sh","description":"Start sql server","name":"start_mysql"},"ctf":{"command":"echo \"c\" > /tmp/c","description":"Add flag","name":"ctf","args":{"ctf":{"type":"text","val":""},"username":{"rule":{"pattern":"^[a-zA-Z0-9_-]+$"},"type":"text","val":""}}}},"icon":"assets/docker_image_icons/server.png"},"Id":"sha256:74e31711c551034886425a82f9ced733b0c93d977323078de560807ad5f00c18","actions":{"create_db":{"args":{"db_name":{"rule":{"pattern":"^[a-zA-Z0-9_-]+$"},"type":"text","val":""}},"command":"/create_db.sh","description":"Create a new db, insert a name for new db","name":"create_db"},"exec":{"command":"exec","description":"Execute a generic command","name":"exec","args":{"command":{"type":"text","val":"echo \"h3llO\""}}},"sed":{"args":{"filename":{"type":"text","val":""},"string_one":{"type":"text","val":""},"string_two":{"type":"text","val":""}},"command":"/sed.sh ","description":"Replace a string with another inside a file","name":"sed"},"setgw":{"args":{"gateway":{"rule":{"pattern":"^[a-zA-Z0-9_-]+$"},"type":"text","val":""}},"command":"/setgw.sh","description":"Set default gateway  <name container gateway> ","name":"setgw"},"sql_to_db":{"args":{"db_name":{"type":"text","val":""},"sql_file":{"type":"text","val":""}},"command":"/sql_to_db.sh","description":"Execute a sql file into a db (you must load a sql file in container first! ) ","name":"sql_to_db"},"start_apache":{"command":"/apache_start.sh","description":"Start web server","name":"start_apache"},"start_apache_debug":{"command":"/apache_start_debug.sh","description":"Start web server in debug mode (all errors reported)","name":"start_apache_debug"},"start_mysql":{"command":"/mysql_start.sh","description":"Start sql server","name":"start_mysql"},"ctf":{"command":"echo \"c\" > /tmp/c","description":"Add flag","name":"ctf","args":{"ctf":{"type":"text","val":""},"username":{"rule":{"pattern":"^[a-zA-Z0-9_-]+$"},"type":"text","val":""}}}},"icon":"assets/docker_image_icons/server.png","toBuild":false},"ports":{"80":11110},"actions":[{"name":"start_mysql","command":"/mysql_start.sh","priority":1},{"name":"start_apache","command":"/apache_start.sh","priority":2,"index":1},{"name":"exec","command":"/exec.sh ","priority":1,"args":{"command":{"type":"text","val":"chmod ugo+w /var/www/example.com/public_html/DVWA/hackable/uploads/"}}},{"name":"sed","command":"/sed.sh ","priority":1,"args":{"filename":{"type":"text","val":"/etc/php5/apache2/php.ini"},"string_one":{"type":"text","val":"allow_url_include = Off"},"string_two":{"type":"text","val":"allow_url_include = On"}}},{"name":"exec","command":"/exec.sh ","priority":1,"args":{"command":{"type":"text","val":"chmod ugo+w /var/www/example.com/public_html/DVWA/external/phpids/0.6/lib/IDS/tmp/phpids_log.txt"}}}],"volumes":[],"filesToCopy":[{"filename":"DVWA","containerPath":"/var/www/example.com/public_html/","afterAction":false}],"networks":{},"environments":[]}],"clistNotToDraw":[],"isComposeVisible":true}
